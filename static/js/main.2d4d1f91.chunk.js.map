{"version":3,"sources":["Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","useState","currentDisplay","setCurrentDisplay","calcEvaled","setCalcEvaled","decimalClicked","setDecimalClicked","displayFull","setDisplayFull","symbolsList","useEffect","clearDisplay","playClick","typeOnDisplay","calcButtonValue","includes","length","currentDisplayCopy","slice","endsWith","delButton","evalButton","currentDisplayCopied","eval","soundFile","document","getElementById","currentTime","play","className","id","onClick","src","App","rel","target","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d4d1f91.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Calculator.css\";\r\n\r\nexport default function Calculator() {\r\n  const [currentDisplay, setCurrentDisplay] = useState(\"0\");\r\n  // eslint-disable-next-line\r\n  const [calcEvaled, setCalcEvaled] = useState(false);\r\n  const [decimalClicked, setDecimalClicked] = useState(false);\r\n  const [displayFull, setDisplayFull] = useState(false);\r\n  const symbolsList = [\"+\", \"-\", \"*\", \"/\"];\r\n\r\n  useEffect(() => {\r\n    if (!currentDisplay) {\r\n      setCurrentDisplay(\"0\");\r\n    }\r\n  }, [currentDisplay]);\r\n  const clearDisplay = () => {\r\n    setCurrentDisplay(\"0\");\r\n    playClick();\r\n    setCalcEvaled(false);\r\n    setDecimalClicked(false);\r\n    setDisplayFull(false);\r\n  };\r\n  //DONT TOUCH THIS MONSTROSITY\r\n  //DONT DO THIS AT HOME\r\n  const typeOnDisplay = (calcButtonValue) => {\r\n    if (!displayFull) {\r\n      if (currentDisplay === \"0\") {\r\n        setCurrentDisplay(calcButtonValue);\r\n      } else if (symbolsList.includes(calcButtonValue)) {\r\n        if (!symbolsList.includes(currentDisplay[currentDisplay.length - 1])) {\r\n          setCurrentDisplay(currentDisplay + calcButtonValue);\r\n        } else if (calcButtonValue !== \"-\") {\r\n          let currentDisplayCopy = currentDisplay;\r\n          currentDisplayCopy = currentDisplayCopy.slice(\r\n            0,\r\n            symbolsList.includes(currentDisplay[currentDisplay.length - 1]) &&\r\n              symbolsList.includes(currentDisplay[currentDisplay.length - 2])\r\n              ? currentDisplayCopy.length - 2\r\n              : currentDisplayCopy.length - 1\r\n          );\r\n          setCurrentDisplay(currentDisplayCopy + calcButtonValue);\r\n        } else if (calcButtonValue === \"-\") {\r\n          if (!currentDisplay.endsWith(\"-\")) {\r\n            setCurrentDisplay(currentDisplay + calcButtonValue);\r\n          }\r\n        }\r\n        setDecimalClicked(false);\r\n      } else if (calcButtonValue === \".\") {\r\n        if (!decimalClicked) {\r\n          setCurrentDisplay(currentDisplay + calcButtonValue);\r\n          setDecimalClicked(true);\r\n        }\r\n      } else {\r\n        setCurrentDisplay(currentDisplay + calcButtonValue);\r\n      }\r\n      if (currentDisplay && currentDisplay.length === 17) {\r\n        setDisplayFull(true);\r\n      }\r\n    }\r\n    playClick();\r\n  };\r\n\r\n  const delButton = () => {\r\n    if (currentDisplay && currentDisplay.length > 1) {\r\n      if (currentDisplay.endsWith(\".\")) setDecimalClicked(false);\r\n      setCurrentDisplay(currentDisplay.slice(0, -1));\r\n    } else {\r\n      setCurrentDisplay(\"0\");\r\n    }\r\n    setDisplayFull(false);\r\n    playClick();\r\n  };\r\n\r\n  const evalButton = () => {\r\n    if (currentDisplay) {\r\n      let currentDisplayCopied = currentDisplay;\r\n      if (\r\n        symbolsList.includes(currentDisplay[currentDisplay.length - 1]) ||\r\n        currentDisplay === \".\"\r\n      ) {\r\n        currentDisplayCopied = currentDisplay.slice(\r\n          0,\r\n          currentDisplay.length - 1\r\n        );\r\n      }\r\n      if (currentDisplay.endsWith(\"-\")) {\r\n        currentDisplayCopied = currentDisplay.slice(\r\n          0,\r\n          currentDisplay.length - 2\r\n        );\r\n      }\r\n      // eslint-disable-next-line\r\n      setCurrentDisplay(eval(currentDisplayCopied));\r\n      setCalcEvaled(true);\r\n    } else {\r\n      setCurrentDisplay(\"0\");\r\n    }\r\n    if (currentDisplay && currentDisplay.includes(\".\")) {\r\n      setDecimalClicked(true);\r\n    } else {\r\n      setDecimalClicked(false);\r\n    }\r\n    playClick();\r\n  };\r\n\r\n  const playClick = () => {\r\n    const soundFile = document.getElementById(\"button-click\");\r\n    soundFile.currentTime = 0;\r\n    soundFile.play();\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator-container\">\r\n      <div className=\"calculator-display\">\r\n        <div className=\"calculator-display-message\" id=\"display\">\r\n          {currentDisplay}\r\n        </div>\r\n        <div className=\"calculator-full-message\">\r\n          {displayFull ? \"MAX\" : \"...\"}\r\n        </div>\r\n      </div>\r\n      <div className=\"calculator-buttons-container\">\r\n        <div className=\"buttons-row\" id=\"first-row\">\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"clear\"\r\n            onClick={() => clearDisplay()}\r\n          >\r\n            Clear All\r\n          </button>\r\n          <button\r\n            className=\"calculator-button operators\"\r\n            id=\"del\"\r\n            onClick={() => {\r\n              delButton();\r\n            }}\r\n          >\r\n            {\"<--\"}\r\n          </button>\r\n          <button\r\n            className=\"calculator-button operators\"\r\n            id=\"divide\"\r\n            onClick={() => typeOnDisplay(\"/\")}\r\n          >\r\n            /\r\n          </button>\r\n        </div>\r\n        <div className=\"buttons-row\" id=\"second-row\">\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"seven\"\r\n            onClick={() => typeOnDisplay(\"7\")}\r\n          >\r\n            7\r\n          </button>\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"eight\"\r\n            onClick={() => typeOnDisplay(\"8\")}\r\n          >\r\n            8\r\n          </button>\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"nine\"\r\n            onClick={() => typeOnDisplay(\"9\")}\r\n          >\r\n            9\r\n          </button>\r\n          <button\r\n            className=\"calculator-button operators\"\r\n            id=\"multiply\"\r\n            onClick={() => typeOnDisplay(\"*\")}\r\n          >\r\n            *\r\n          </button>\r\n        </div>\r\n        <div className=\"buttons-row\" id=\"third-row\">\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"four\"\r\n            onClick={() => typeOnDisplay(\"4\")}\r\n          >\r\n            4\r\n          </button>\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"five\"\r\n            onClick={() => typeOnDisplay(\"5\")}\r\n          >\r\n            5\r\n          </button>\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"six\"\r\n            onClick={() => typeOnDisplay(\"6\")}\r\n          >\r\n            6\r\n          </button>\r\n          <button\r\n            className=\"calculator-button operators\"\r\n            id=\"subtract\"\r\n            onClick={() => typeOnDisplay(\"-\")}\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n        <div className=\"buttons-row\" id=\"fourth-row\">\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"one\"\r\n            onClick={() => typeOnDisplay(\"1\")}\r\n          >\r\n            1\r\n          </button>\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"two\"\r\n            onClick={() => typeOnDisplay(\"2\")}\r\n          >\r\n            2\r\n          </button>\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"three\"\r\n            onClick={() => typeOnDisplay(\"3\")}\r\n          >\r\n            3\r\n          </button>\r\n          <button\r\n            className=\"calculator-button operators\"\r\n            id=\"add\"\r\n            onClick={() => typeOnDisplay(\"+\")}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        <div className=\"buttons-row\" id=\"fifth-row\">\r\n          <button\r\n            className=\"calculator-button\"\r\n            id=\"zero\"\r\n            onClick={() => typeOnDisplay(\"0\")}\r\n          >\r\n            0\r\n          </button>\r\n          <button\r\n            className=\"calculator-button operators\"\r\n            id=\"decimal\"\r\n            onClick={() => typeOnDisplay(\".\")}\r\n          >\r\n            .\r\n          </button>\r\n          <button\r\n            className=\"calculator-button operators\"\r\n            id=\"equals\"\r\n            onClick={() => evalButton()}\r\n          >\r\n            =\r\n          </button>\r\n          <audio\r\n            id=\"button-click\"\r\n            src=\"https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-35448/zapsplat_multimedia_button_press_plastic_click_002_36869.mp3\"\r\n          ></audio>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./Calculator.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"calculator-heading\">React Calculator</h1>\n      <Calculator />\n      <div className=\"created-by-message\">\n        Created by{\" \"}\n        <a\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"https://github.com/pdouu\"\n        >\n          pdouu\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}